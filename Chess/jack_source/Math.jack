class Math {
    static int static_0;
    static int static_1;
    function void init() {
        var int local_0;
        
        let static_1 = Array.new(16);
        let static_0 = Array.new(16);
        let static_0[0] = 1;
        
        while (local_0 < 15) {
        	let local_0 = local_0 + 1;
        	let static_0[local_0] = ( static_0[local_0 - 1] + static_0[local_0 - 1]);
        	
        }
        return;
    }

    function void abs(int argument_0) {
        
        if (argument_0 < 0) {
        	let argument_0 = -(argument_0);
        }
        return;
    }

    function void multiply(int argument_0, int argument_1) {
        var int local_0;
        var int local_1;
        var int local_2;
        var int local_3;
        var int local_4;
        
        let local_4 = ( ( argument_0 < 0 & argument_1 > 0) | ( argument_0 > 0 & argument_1 < 0));
        let argument_0 = Math.abs(argument_0);
        let argument_1 = Math.abs(argument_1);
        if (argument_0 < argument_1) {
        	let local_1 = argument_0;
        	let argument_0 = argument_1;
        	let argument_1 = local_1;
        }
        while (( local_2 - 1 < argument_1 - 1)) {
        	if (~(( ( static_0[local_3] & argument_1) = 0))) {
        		let local_0 = local_0 + argument_0;
        		let local_2 = ( local_2 + static_0[local_3]);
        	}
        	let argument_0 = argument_0 + argument_0;
        	let local_3 = local_3 + 1;
        }
        if (local_4) {
        	let local_0 = -(local_0);
        }
        return;
    }

    function int divide(int argument_0, int argument_1) {
        var int local_0;
        var int local_1;
        var int local_2;
        var int local_3;
        
        if (argument_1 = 0) {
        	do Sys.error(3);
        }
        let local_2 = ( ( argument_0 < 0 & argument_1 > 0) | ( argument_0 > 0 & argument_1 < 0));
        let static_1[0] = Math.abs(argument_1);
        
        let argument_0 = Math.abs(argument_0);
        while (( local_0 < 15 & ~(local_3))) {
        	let local_3 = ( ( 32767 - ( static_1[local_0] - 1)) < ( static_1[local_0] - 1));
        	if (~(local_3)) {
        		let static_1[local_0 + 1] = ( static_1[local_0] + static_1[local_0]);
        		
        		let local_3 = ( ( static_1[local_0 + 1] - 1) > argument_0 - 1);
        		if (~(local_3)) {
        			let local_0 = local_0 + 1;
        		}
        	}
        }
        while (( local_0 > -(1))) {
        	if (~(( ( static_1[local_0] - 1) > argument_0 - 1))) {
        		let local_1 = ( local_1 + static_0[local_0]);
        		let argument_0 = ( argument_0 - static_1[local_0]);
        	}
        	let local_0 = local_0 - 1;
        }
        if (local_2) {
        	let local_1 = -(local_1);
        }
        return local_1;
    }

    function int max(int argument_0, int argument_1) {
        
        if (argument_0 > argument_1) {
        	let argument_1 = argument_0;
        }
        return argument_1;
    }

    function int min(int argument_0, int argument_1) {
        
        if (argument_0 < argument_1) {
        	let argument_1 = argument_0;
        }
        return argument_1;
    }

}
