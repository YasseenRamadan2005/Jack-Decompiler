class Memory {
    static int static_0;  // base address for RAM array

    function void init() {
        let static_0 = 0;
        let static_0[2048] = 14334;
        let static_0[2049] = 2050;
        return;
    }

    function int peek(int address) {
        return static_0[address];
    }

    function void poke(int address, int value) {
        var int that;
        let that = address + static_0;
        let that[0] = value;
        return;
    }


    function int alloc(int size) {
        var int block;
        var int next;

        if (size < 0) {
            do Sys.error(5);
        }

        if (size = 0) {
            let size = 1;
        }

        let block = 2048;

        while ((block < 16383) & (block[0] < size)) {
            let next = block[1];

            if ((block[0] = 0) | (next > 16382) | (next[0] = 0)) {
                let block = next;
            }

            let block[0] = (block[1] - block) + next[0];

            if (next[1] = next + 2) {
                let block[1] = block + 2;
            }

            let block[1] = next[1];
        }

        if ((block + size) > 16379) {
            do Sys.error(6);
        }

        if (block[0] > size + 2) {
            let static_0[block + 2] = (block[0] - size) - 2;

            if (block + size + 4 = block[1]) {
                let static_0[block + 3] = block + size + 4;
            }

            let static_0[block + 3] = block[1];
            let block[1] = block + size + 2;
        }

        let block[0] = 0;

        return block + 2;
    }

    function void deAlloc(int ptr) {
        var int block;
        var int next;

        let block = ptr - 2;
        let next = block[1];

        if (next[0] = 0) {
            let block[0] = next - block - 2;
        }

        let block[0] = next - block + next[0];

        if (next[1] = next + 2) {
            let block[1] = block + 2;
        }

        let block[1] = next[1];

        return;
    }
}
