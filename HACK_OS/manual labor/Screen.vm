function Screen.init 1
push constant 16384
pop static 1
push constant 0
not
pop static 2
push constant 17
call Array.new 1
pop static 0
push constant 0
push static 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
push local 0
push static 0
add
push local 0
push constant 1
sub
push static 0
add
pop pointer 1
push that 0
push local 0
push constant 1
sub
push static 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.updateLocation 1
push argument 0
push static 1
add
call Memory.peek 1
pop local 0
push static 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 1
or
pop local 0
goto IF_END0
label IF_FALSE0
push local 0
push argument 1
not
and
pop local 0
label IF_END0
push argument 0
push static 1
add
push local 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawPixel 3
push argument 0
push constant 0
lt
push argument 0
or
push constant 511
gt
push argument 1
or
push constant 0
lt
push argument 1
or
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 7
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 0
push constant 16
call Math.divide 2
pop local 0
push argument 0
push local 0
push constant 16
call Math.multiply 2
sub
pop local 1
push argument 1
push constant 32
call Math.multiply 2
push local 0
add
pop local 2
push local 2
push local 1
push static 0
add
pop pointer 1
push that 0
call Screen.updateLocation 2
pop temp 0
push constant 0
return
function Screen.drawConditional 0
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 0
call Screen.drawPixel 2
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
label IF_END0
push constant 0
return
function Screen.drawHorizontal 11
push argument 1
push argument 2
call Math.min 2
pop local 1
push argument 1
push argument 2
call Math.max 2
pop local 2
push argument 0
push constant 0
lt
not
push argument 0
push constant 256
lt
and
push local 1
push constant 512
lt
and
push local 2
push constant 0
lt
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 0
call Math.max 2
pop local 1
push local 2
push constant 511
call Math.min 2
pop local 2
push local 1
push constant 16
call Math.divide 2
pop local 3
push local 1
push local 3
push constant 16
call Math.multiply 2
sub
pop local 4
push local 2
push constant 16
call Math.divide 2
pop local 5
push local 2
push local 5
push constant 16
call Math.multiply 2
sub
pop local 6
push local 4
push static 0
add
pop pointer 1
push that 0
push constant 1
sub
not
pop local 7
push local 6
push constant 1
add
push static 0
add
pop pointer 1
push that 0
push constant 1
sub
pop local 8
push argument 0
push constant 32
call Math.multiply 2
push local 3
add
pop local 9
push local 5
push local 3
sub
pop local 10
push local 10
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 9
push local 7
push local 8
and
call Screen.updateLocation 2
pop temp 0
goto IF_END1
label IF_FALSE1
push local 9
push local 7
call Screen.updateLocation 2
pop temp 0
push local 9
push constant 1
add
pop local 9
label WHILE_EXP0
push local 9
push argument 0
push constant 32
call Math.multiply 2
lt
push local 5
add
not
if-goto WHILE_END0
push local 9
push constant 0
not
call Screen.updateLocation 2
pop temp 0
push local 9
push constant 1
add
pop local 9
goto WHILE_EXP0
label WHILE_END0
push argument 0
push constant 32
call Math.multiply 2
push local 5
add
push local 8
call Screen.updateLocation 2
pop temp 0
label IF_END1
label IF_FALSE0
push constant 0
return
function Screen.drawSymetric 0
push argument 1
push argument 3
sub
push argument 0
push argument 2
add
push argument 0
push argument 2
sub
call Screen.drawHorizontal 3
pop temp 0
push argument 1
push argument 3
add
push argument 0
push argument 2
add
push argument 0
push argument 2
sub
call Screen.drawHorizontal 3
pop temp 0
push argument 1
push argument 2
sub
push argument 0
push argument 3
sub
push argument 0
push argument 3
add
call Screen.drawHorizontal 3
pop temp 0
push argument 1
push argument 2
add
push argument 0
push argument 3
sub
push argument 0
push argument 3
add
call Screen.drawHorizontal 3
pop temp 0
push constant 0
return
