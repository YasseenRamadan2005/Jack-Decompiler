function Screen.init 0
push constant 0
not
pop static 0
push constant 0
return
function Screen.drawPixel 2
push constant 16384
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
add
pop local 0
push argument 0
push constant 15
and
pop local 1
push static 0
push constant 0
eq
not
not
if-goto Screen.drawPixel.IfElse1
push local 0
push constant 0
add
pop pointer 1
push that 0
push local 1
call Math.twoToThe 1
or
push local 0
push constant 0
add
pop pointer 1
pop that 0
goto Screen.drawPixel.IfElseEND1
label Screen.drawPixel.IfElse1
push local 0
push constant 0
add
pop pointer 1
push that 0
push local 1
call Math.twoToThe 1
not
and
push local 0
push constant 0
add
pop pointer 1
pop that 0
label Screen.drawPixel.IfElseEND1
push constant 0
return
function Screen.drawHorizontalLine 1
push argument 0
pop local 0
label WHILE_START_Screen.drawHorizontalLine1
push local 0
push argument 1
gt
not
not
if-goto WHILE_END_Screen.drawHorizontalLine1
push local 0
push argument 2
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_START_Screen.drawHorizontalLine1
label WHILE_END_Screen.drawHorizontalLine1
push constant 0
return
