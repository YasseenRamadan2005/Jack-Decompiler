class Memory {
    static int static_0;
    function void init() {
        
        let static_0 = 0;
        let 2048[static_0] = 14334;
        let  = ;
        let 2049[static_0] = 2050;
        let  = ;
        return;
    }

    function int peek(int argument_0) {
        
        argument_0 + static_0
        return ;
    }

    function int alloc(int argument_0) {
        var int local_0;
        var int local_1;
        
        if (~(argument_0 < 0)) {
        	if (~(argument_0 = 0)) {
        		let local_0 = 2048;
        	} else {
        		let argument_0 = 1;
        	}
        } else {
        	do Sys.error(5);
        }
        local_0 < 16383
        if (~(~(( 0 + local_0 &  < argument_0)))) {
        	1 + local_0
        	let local_1 = ;
        	0 + local_0
        	(  = 0 | local_1 > 16382)
        	if (~(( 0 + local_1 |  = 0))) {
        		0 + local_0
        		1 + local_0
        		let  - local_0 = ( 0 + local_1 + );
        		let  = ;
        		1 + local_1
        		if (~((  = local_1 + 2))) {
        			1 + local_0
        			let 1[local_1] = ;
        			let  = ;
        		} else {
        			let 1[local_0] = local_0 + 2;
        			let  = ;
        // Unhandled VM instruction: GotoInstruction
        		}
        	} else {
        		let local_0 = local_1;
        // Unhandled VM instruction: GotoInstruction
        	}
        }
        else {
        	if (~(( local_0 + argument_0 > 16379))) {
        		0 + local_0
        		if (~((  > argument_0 + 2))) {
        			let 0[local_0] = 0;
        			let  = ;
        			return local_0 + 2;
        		} else {
        			( argument_0 + 2 + local_0)
        			let 0[local_0] = (  - argument_0 - 2);
        			let  = ;
        			1 + local_0
        			if (~((  = local_0 + 2))) {
        				( argument_0 + 3 + local_0)
        				let 1[local_0] = ;
        				let  = ;
        			} else {
        				let argument_0[3][local_0] = ( local_0 + argument_0 + 4);
        				let  = ;
        // Unhandled VM instruction: GotoInstruction
        			}
        			let 1[local_0] = ( local_0 + argument_0 + 2);
        			let  = ;
        		}
        	} else {
        		do Sys.error(6);
        	}
        }
    }

    function void deAlloc(int argument_0) {
        var int local_0;
        var int local_1;
        
        let local_0 = argument_0 - 2;
        1 + local_0
        let local_1 = ;
        0 + local_1
        if (~( = 0)) {
        	0 + local_0
        	1 + local_0
        	let  - local_0 = ( 0 + local_1 + );
        	let  = ;
        	1 + local_1
        	if (~((  = local_1 + 2))) {
        		1 + local_0
        		let 1[local_1] = ;
        		let  = ;
        	} else {
        		let 1[local_0] = local_0 + 2;
        		let  = ;
        // Unhandled VM instruction: GotoInstruction
        	}
        } else {
        	0 + local_0
        	let 1[local_0] = (  - local_0 - 2);
        	let  = ;
        // Unhandled VM instruction: GotoInstruction
        }
        return;
    }

}
